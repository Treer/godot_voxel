name: üêí Mono Windows Builds
on:
  push:
    branches: [ master, github_actions ]
  pull_request:
    branches: [ master ]

# Global Cache Settings
env:
  GODOT_BASE_BRANCH: 3.x
  SCONS_CACHE_LIMIT: 4096
  MONO_TAG: mono-6.12.0.147
  MONO_BCL_RELEASE_TAG: release-c3a9d31
  MONO_CFG_DIR: C:\Program Files\Mono-6.12.0\etc

jobs:

  build-mono:
    runs-on: "windows-latest"
    name: Build Mono
    
    steps:
      # Clone/Use Cached Mono
      - name: Checkout Mono Sources
        uses: actions/checkout@v2
        with:
          repository: mono/mono
          ref: ${{ env.MONO_TAG }}
          path: mono-source

      # Clean the Mono repo, get submodules
      - name: Clean Mono
        run: pushd mono-source && git reset --hard && git clean -xffd && git submodule foreach --recursive git reset --hard && git submodule foreach --recursive git clean -xffd && git submodule update --init --recursive && popd

      - name: Get Voxel Repo
        uses: actions/checkout@v2
        with:
          path: godot_voxel

      # Apply the debugger fix
      - name: Patch Mono
        run: |
          pushd mono-source
          curl --location https://raw.githubusercontent.com/godotengine/godot-mono-builds/master/files/patches/mono-dbg-agent-clear-tls-instead-of-abort.diff -O
          git apply mono-dbg-agent-clear-tls-instead-of-abort.diff
          popd

      - name: Configure build for amd64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      # Build Mono for Windows (MSVC)
      - name: Build Mono
        run: |
          cd mono-source
          msbuild msvc\mono.sln /p:Platform=x64 /p:Configuration=Release /p:MONO_TARGET_GC=sgen
          Compress-Archive -Path ./msvc/build/sgen/x64 -DestinationPath ../mono-build.zip

      # Make glue available as artifact for dependent jobs
      - uses: actions/upload-artifact@v2
        with:
          name: mono-builds
          path: mono-build.zip
          
  mono-glue:
    runs-on: "windows-latest"
    name: Generate Mono Glue
    needs: build-mono

    steps:
      # Clone Godot
      - uses: actions/checkout@v2
        with:
          repository: godotengine/godot
          ref: 3.x
          path: godot

      # Clone our module under the correct directory
      - uses: actions/checkout@v2
        with:
          path: godot/modules/voxel

      # Move nuget.config from voxel repo to root of checkout, so msbuild can find it
      - name: Move nuget.config
        run: mv godot/modules/voxel/nuget.config godot/nuget.config

      # Download Mono Build
      - name: Download Mono Build
        uses: actions/download-artifact@v2
        with:
          name: mono-builds
          path: mono-builds

      - name: Uncompress Mono-Build
        run: |
          cd mono-builds
          Expand-Archive -Path mono-build.zip -DestinationPath mono-build
          cd mono-build
          cd x64
          cd lib
          cd Release
          Get-ChildItem -Path ./ -Recurse -File | Move-Item -Destination ../
          cd ../../../
          Get-ChildItem -Path ./ -Recurse

      - name: Download Mono BCL
        run: |
          curl --location https://github.com/godotengine/godot-mono-builds/releases/download/${{ env.MONO_BCL_RELEASE_TAG}}/bcl-desktop-win32.zip -O
          Expand-Archive -Path bcl-desktop-win32.zip -DestinationPath bcl-desktop-win32

      # Install all packages (except scons)
      - name: Configure dependencies
        run: choco install python yasm make

      # For copy_mono_root
      - name: Install Mono Runtime (for copy_mono_root)
        run: |
          curl --location https://download.mono-project.com/archive/6.12.0/windows-installer/${{ env.MONO_TAG }}-x64-0.msi -O
          Start-Process msiexec.exe -Wait -ArgumentList '/I D:\a\godot_voxel\godot_voxel\${{ env.MONO_TAG }}-x64-0.msi /quiet'

      # Upload cache on completion and check it out now
      - name: Load .scons_cache directory
        id: mono-glue-cache
        uses: actions/cache@v2
        with:
          path: ${{github.workspace}}/.scons_cache/
          key: ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
          restore-keys: |
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}-${{github.sha}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}-${{github.ref}}
            ${{github.job}}-${{env.GODOT_BASE_BRANCH}}

      # Use python 3.x release (works cross platform; best to keep self contained in it's own step)
      - name: Set up Python 3.x
        uses: actions/setup-python@v2
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x86 architecture, defaults to x64
          architecture: 'x64'

      # Setup scons, print python version and scons version info, so if anything is broken it won't run the build.
      - name: Configuring Python packages
        run: |
          python -c "import sys; print(sys.version)"
          python -m pip install scons
          python --version
          scons --version
      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      - name: Compile Godot (module_mono_enabled=yes mono_glue=no)
        env:
          SCONS_CACHE: ${{github.workspace}}/.scons_cache/
        run: |
          cd godot
          scons -j2 verbose=yes warnings=all werror=yes platform=windows tools=yes tests=no target=release_debug debug_symbols=no module_mono_enabled=yes mono_glue=no copy_mono_root=yes mono_static=yes mono_prefix=D:\a\godot_voxel\godot_voxel\mono-builds\mono-build\x64 mono_bcl=bcl-desktop-win32\desktop-win32-bcl\net_4_x-win32
      - name: Generate Mono Glue
        run: |
          cd godot
          /bin/godot.windows.opt.tools.64.mono.exe --generate-mono-glue godot/modules/mono/glue

      # We should always be explicit with our flags usage here since it's gonna be sure to always set those flags
      - name: Compilation
        env:
          SCONS_CACHE_MSVC_CONFIG: true
          SCONS_CACHE: /.scons_cache/
        run: |
          cd godot
          scons -j2 verbose=yes warnings=all werror=yes platform=windows tools=yes tests=no target=release_debug debug_symbols=no module_mono_enabled=yes mono_glue=yes copy_mono_root=yes mono_static=yes mono_prefix=D:\a\godot_voxel\godot_voxel\mono-builds\mono-build\x64 mono_bcl=bcl-desktop-win32\desktop-win32-bcl\net_4_x-win32
      # TODO Such tests are able to run from Godot 4.0 only
      # Execute unit tests for the editor
      #- name: Unit Tests
      #  run: |
      #    ./bin/godot.windows.opt.tools.64.mono.exe --test

      # Make build available
      - uses: actions/upload-artifact@v2
        with:
          name: godot.windows.opt.tools.64.mono
          path: godot/bin/*
